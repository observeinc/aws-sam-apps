name: SAST, SCA & Image Scan Workflow

on:
  push:
    branches: ["main"]
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:

jobs:
  orca-scan:
    name: Orca Scan
    runs-on: ubuntu-latest
    env:
      PROJECT_KEY: observeinc-aws-sam-apps
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run Orca SAST Scan
        uses: orcasecurity/shiftleft-sast-action@v1
        with:
          api_token: ${{ secrets.ORCA_SECURITY_API_TOKEN }}
          project_key: ${{ env.PROJECT_KEY }}
          path: "."

      - name: Run Orca FS Scan
        uses: orcasecurity/shiftleft-fs-action@v1
        with:
          api_token: ${{ secrets.ORCA_SECURITY_API_TOKEN }}
          project_key: ${{ env.PROJECT_KEY }}
          path: "."

      - name: Run Orca IaC Scan
        uses: orcasecurity/shiftleft-iac-action@v1
        with:
          api_token: ${{ secrets.ORCA_SECURITY_API_TOKEN }}
          project_key: ${{ env.PROJECT_KEY }}
          path: "."

  orca-container-scan:
    name: Orca Container Image Scan
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      security-events: write  
    env:
      PROJECT_KEY: observeinc-aws-sam-apps
      IMAGE_NAME: aws-sam-apps-all-binaries
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_ENG }} #Use Eng OIDC trusted role 
          role-session-name: ${{ github.sha }}
          aws-region: us-west-2

      - name: Log in to Amazon ECR
        if: github.ref_name == 'main'
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.8

      - name: Build Docker Image Locally
        run: | 
            make docker-build-all-binaries-image IMAGE_NAME=${{ env.IMAGE_NAME }}
      
      - name: Tag and Push Docker Image to ECR (main branch only) #Used for Orca ECR Scanning 
        if: github.ref_name == 'main'
        run: |
          ECR_REPO="723346149663.dkr.ecr.us-west-2.amazonaws.com/aws-sam-apps-orca"
          docker tag ${{ env.IMAGE_NAME }}:latest $ECR_REPO:latest
          docker push $ECR_REPO:latest

      - name: Run Orca Container Image Scan #Used for CI Level Scanning (no alerts generated)
        uses: orcasecurity/shiftleft-container-image-action@v1
        with:
          api_token: ${{ secrets.ORCA_SECURITY_API_TOKEN }}
          project_key: ${{ env.PROJECT_KEY }}
          image: ${{ env.IMAGE_NAME }}