---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Collect resource, logs and metrics from AWS
Metadata:
  AWS::ServerlessRepo::Application:
    Name: observe-aws-collection
    Description: Collect resource, logs and metrics data from AWS
    Author: Observe Inc
    SpdxLicenseId: Apache-2.0
    ReadmeUrl: README.md
    HomePageUrl: https://github.com/observeinc/aws-sam-apps
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/observeinc/aws-sam-apps

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Destination parameters
        Parameters:
          - DestinationUri
          - DataAccessPointArn
      - Label:
          default: AWS Config
        Parameters:
          - ConfigDeliveryBucketName
          - IncludeResourceTypes
          - ExcludeResourceTypes
      - Label:
          default: CloudWatch Logs
        Parameters:
          - LogGroupNamePatterns
          - LogGroupNamePrefixes
          - ExcludeLogGroupNamePatterns
      - Label:
          default: CloudWatch Metrics
        Parameters:
          - MetricStreamFilterUri
          - ObserveAccountID
          - ObserveDomainName
          - DatasourceID
          - GQLToken
          - UpdateTimestamp
      - Label:
          default: Forwarder Options
        Parameters:
          - SourceBucketNames
          - ContentTypeOverrides
          - NameOverride
      - Label:
          default: Debugging Options
        Parameters:
          - DebugEndpoint

Parameters:
  DestinationUri:
    Type: String
    Description: >-
      The URI for your destination, e.g. `s3://bucket-alias/ds101/`. S3 URIs
      must end in a forward slash.
    AllowedPattern: "^(s3:\/\/.+\/|https:\/\/.+)$"
  DataAccessPointArn:
    Type: String
    Description: >-
      The access point ARN for your Filedrop.
    AllowedPattern: "^(arn:.*)?$"
    Default: ''
  ConfigDeliveryBucketName:
    Type: String
    Description: >-
      If AWS Config is already enabled in this account and region, provide the
      S3 bucket snapshots are written to.
    Default: ""
  IncludeResourceTypes:
    Type: CommaDelimitedList
    Description: >-
      If AWS Config is not enabled in this account and region, provide a list of
      resource types to collect. Use a wildcard to collect all
      supported resource types.
    Default: ""
    AllowedPattern: '^([a-zA-Z0-9]+::[a-zA-Z0-9]+::[a-zA-Z0-9]+|\*)?$'
  ExcludeResourceTypes:
    Type: CommaDelimitedList
    Description: >-
      Exclude a subset of resource types from configuration collection. This
      parameter can only be set if IncludeResourceTypes is wildcarded.
    Default: ""
    AllowedPattern: '^([a-zA-Z0-9]+::[a-zA-Z0-9]+::[a-zA-Z0-9]+)?$'
  LogGroupNamePatterns:
    Type: CommaDelimitedList
    Description: >-
      Comma separated list of patterns. If not empty, the lambda function will
      only apply to log groups that have names that match one of the provided
      strings based on a case-sensitive substring search.
    Default: ''
    AllowedPattern: '^(\*|[a-zA-Z0-9-_\/]*)$'
  LogGroupNamePrefixes:
    Type: CommaDelimitedList
    Description: >-
      Comma separated list of prefixes. If not empty, the lambda function will
      only apply to log groups that start with a provided string.
    Default: ''
    AllowedPattern: '^(\*|[a-zA-Z0-9-_\/]*)$'
  ExcludeLogGroupNamePatterns:
    Type: CommaDelimitedList
    Description: >-
      Comma separated list of patterns. This paramter is used to filter out log
      groups from subscription, and supports the use of regular expressions.
    Default: ''
  MetricStreamFilterUri:
    Type: String
    Description: >-
      S3 URI containing filters for metrics to be collected by CloudWatch
      Metrics Stream. If neither this nor DatasourceID is provided, no metrics
      will be collected.
    Default: 's3://observeinc/cloudwatchmetrics/filters/recommended.yaml'
    # Not used: if no MetricStreamFilterUri is provided, the Metric Stream
    # nested stack will not be deployed. This value is used as a sensible
    # default in case the above changes.
    AllowedPattern: "^(s3:\/\/.*)?$"
  ObserveAccountID:
    # this and the field below are necessary for us to be able to make a
    # request to Observe's GraphQL API - we use them to form the URL we
    # make the request to.
    Type: String
    Description: Observe Account ID
    AllowedPattern: '\d*'
    Default: ''
  ObserveDomainName:
    Type: String
    Description: >-
      The domain name we will retrieve metric configuration from.
    Default: ''
  UpdateTimestamp:
    # Used to trigger a stack update when the lambda is used to update the
    # metric stream. The change in timestamp is used to trigger an update
    # of the custom resource. Without a change, the custom resource will
    # not be updated, and the lambda will not run.
    Type: String
    Description: Unix timestamp when metric stream was created or updated.
    Default: ''
    AllowedPattern: "^[0-9]*$"
  DatasourceID:
    Type: String
    Description: >-
      The datasource for this metric stream.
    AllowedPattern: '\d*'
    Default: ''
  GQLToken:
    # The token for making a request to Observe's
    # GraphQL API. It is stored in Secrets Manager.
    # noEcho prevents it from being displayed in the console.
    Type: String
    NoEcho: true
    Description: >-
      The token used to retrieve metric configuration.
    Default: ''
  SourceBucketNames:
    Type: CommaDelimitedList
    Description: >-
      A list of bucket names which the forwarder will read from.
    Default: ""
    AllowedPattern: "^[a-z0-9-.]*(\\*)?$"
  ContentTypeOverrides:
    Type: CommaDelimitedList
    Description: >-
      A list of key value pairs. The key is a regular expression which is
      applied to the S3 source (<bucket>/<key>) of forwarded files. The value
      is the content type to set for matching files. For example,
      `\.json$=application/x-ndjson` would forward all files ending in `.json`
      as newline delimited JSON
      files.
    Default: ''
  NameOverride:
    Type: String
    Description: >-
      Name of IAM role expected by Filedrop. This role will be created as part
      of this stack, and must therefore be unique within the account.
    Default: ""
    MaxLength: 51
  DebugEndpoint:
    Type: String
    Description: >-
      OpenTelemetry endpoint to send additional telemetry to.
    Default: ''
    AllowedPattern: "^(http(s)?:\/\/.*)?$"

Conditions:
  EmptyConfigDeliveryBucketName: !Equals
    - !Ref ConfigDeliveryBucketName
    - ""
  EnableConfigSubscription: !Not
    - !Condition EmptyConfigDeliveryBucketName
  EnableConfig: !And
    - !Not
      - !Condition EnableConfigSubscription
    - !Not
      - !Equals
        - ""
        - !Join
          - ","
          - !Ref IncludeResourceTypes
  EmptySourceBucketNames: !Equals
    - !Join [",", !Ref SourceBucketNames]
    - ""
  UseStackName: !Equals
    - !Ref NameOverride
    - ""
  EnableMetricStream: !Or
    - !Not
      - !Equals
        - !Ref MetricStreamFilterUri
        - ""
    - !Not
      - !Equals
        - !Ref DatasourceID
        - ""
  DeployLambda: !Not
    - !Equals
      - !Ref DatasourceID
      - ""

Resources:
  Topic:
    Type: "AWS::SNS::Topic"
  TopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "Config"
            Effect: "Allow"
            Principal:
              Service:
                - "config.amazonaws.com"
            Action:
              - "sns:Subscribe"
              - "sns:Receive"
              - "sns:ListSubscriptionsByTopic"
            Resource:
              - !Ref Topic
          - Sid: "S3"
            Effect: "Allow"
            Principal:
              Service:
                - "s3.amazonaws.com"
            Action:
              - "sns:Publish"
            Resource:
              - !Ref Topic
          - Sid: "Cloudformation"
            Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sns:Publish"
            Resource:
              - !Ref Topic
      Topics:
        - !Ref Topic
  Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    DependsOn: TopicPolicy
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 4
            Status: Enabled
      NotificationConfiguration:
        TopicConfigurations:
          - Event: "s3:ObjectCreated:*"
            Topic: !Ref Topic
  Forwarder:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../forwarder/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        DataAccessPointArn: !Ref DataAccessPointArn
        DestinationUri: !Ref DestinationUri
        SourceBucketNames: !Join
          - ","
          - - !Ref Bucket
            - !If
              - EmptySourceBucketNames
              - !Ref AWS::NoValue
              - !Join [",", !Ref SourceBucketNames]
            - !If
              - EmptyConfigDeliveryBucketName
              - !Ref AWS::NoValue
              - !Ref ConfigDeliveryBucketName
        SourceTopicArns: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*"
        ContentTypeOverrides: !Join
          - ","
          - !Ref ContentTypeOverrides
        NameOverride: !If
          - UseStackName
          - !Ref AWS::StackName
          - !Ref NameOverride
        DebugEndpoint: !Ref DebugEndpoint
  TopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt
        - Forwarder
        - Outputs.QueueArn
      Protocol: sqs
      TopicArn: !Ref Topic
  Config:
    Type: AWS::Serverless::Application
    DependsOn: Forwarder
    Condition: EnableConfig
    Properties:
      Location: ../config/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        BucketName: !Ref Bucket
        TopicArn: !Ref Topic
        IncludeResourceTypes: !Join [",", !Ref IncludeResourceTypes]
        ExcludeResourceTypes: !Join [",", !Ref ExcludeResourceTypes]
  ConfigSubscription:
    Type: AWS::Serverless::Application
    Condition: EnableConfigSubscription
    Properties:
      Location: ../configsubscription/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        TargetArn: !GetAtt
          - Forwarder
          - Outputs.QueueArn
  LogWriter:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../logwriter/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        BucketArn: !GetAtt Bucket.Arn
        DebugEndpoint: !Ref DebugEndpoint
        LogGroupNamePrefixes: !Join [",", !Ref LogGroupNamePrefixes]
        LogGroupNamePatterns: !Join [",", !Ref LogGroupNamePatterns]
        ExcludeLogGroupNamePatterns: !Join
          - ","
          - !Ref ExcludeLogGroupNamePatterns
        FilterName: 'observe-logs-subscription'
        DiscoveryRate: "24 hours"
        NameOverride: !If
          - UseStackName
          - !Sub "${AWS::StackName}-LogWriter"
          - !Sub "${NameOverride}-LogWriter"
  MetricStream:
    Type: AWS::Serverless::Application
    Condition: EnableMetricStream
    Properties:
      Location: ../metricstream/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        BucketArn: !GetAtt Bucket.Arn
        FilterUri: !If
          - DeployLambda
          - 's3://observeinc/cloudwatchmetrics/filters/default.yaml'
          - !Ref MetricStreamFilterUri
          # We provide a yaml file URI here where the contents are a sentinel
          # value that the user would never enter. Then the lambda modifies
          # the metricstream to reflect the actual config provided. We need
          # this sentinel value here initially so that if we switch back to the
          # yaml based approach, the cloudformation stack will recognize that
          # the value from the yaml file has changed and will update.
        ObserveAccountID: !Ref ObserveAccountID
        ObserveDomainName: !Ref ObserveDomainName
        UpdateTimestamp: !Ref UpdateTimestamp
        GQLToken: !Ref GQLToken
        DatasourceID: !Ref DatasourceID
        NameOverride: !If
          - UseStackName
          - !Sub "${AWS::StackName}-MetricStream"
          - !Sub "${NameOverride}-MetricStream"
Outputs:
  BucketName:
    Description: >-
      Collection Bucket Name. Objects written to this bucket will be forwarded
      to your destination. This bucket has a strict expiration policy.
    Value: !Ref Bucket
  TopicArn:
    Description: >-
      Collection Topic ARN. Events written to this SNS Topic will be forwarded
      to your destination. S3 Object Created events may trigger an object copy
      towards destination.
    Value: !Ref Topic
  ForwarderArn:
    Description: >-
      Forwarder Function ARN. This is the Lambda function responsible for
      forwarding objects to Observe.
    Value: !GetAtt
      - Forwarder
      - Outputs.ForwarderArn
  ForwarderQueueArn:
    Description: >-
      Forwarder Queue ARN. Events sent to this queue will be forwarded to
      Observe. s3:ObjectCreated events will initiate an object copy to
      destination.
    Value: !GetAtt
      - Forwarder
      - Outputs.QueueArn
  ForwarderRoleArn:
    Description: >-
      Forwarder Role ARN. This role will be assumed by the Forwarder Lambda
      Function in order to write data to destination.
    Value: !GetAtt
      - Forwarder
      - Outputs.RoleArn
  ForwarderLogGroupName:
    Description: >-
      Forwarder Log Group Name. This log group contains useful information for
      debugging the Forwarder Lambda.
    Value: !GetAtt
      - Forwarder
      - Outputs.LogGroupName
  LogWriterFirehoseArn:
    Description: >-
      LogWriter Kinesis Firehose Delivery Stream ARN. CloudWatch Log Groups
      subscribed to this Firehose will have their logs batched and written to
      S3.
    Value: !GetAtt
      - LogWriter
      - Outputs.FirehoseArn
  LogWriterDestinationRoleArn:
    Description: >-
      ARN for IAM Role to be assumed by CloudWatch for log delivery. This value
      is required when configuring a subscription towards the Firehose Delivery
      Stream.
    Value: !GetAtt
      - LogWriter
      - Outputs.DestinationRoleArn
  LogWriterFirehoseLogGroupName:
    Description: >-
      LogWriter Firehose Log Group Name. These logs may contain useful
      information for debugging Firehose delivery to S3.
    Value: !GetAtt
      - LogWriter
      - Outputs.FirehoseLogGroupName
  LogWriterSubscriberArn:
    Description: >-
      Subscriber Function ARN. This function is responsible for log group
      discovery, filtering and subscription.
    Value: !GetAtt
      - LogWriter
      - Outputs.SubscriberArn
  LogWriterSubscriberQueueArn:
    Description: >-
      LogWriter Subscriber Queue ARN. This queue is used by the subscriber
      function to fan out execution of subscription requests.
    Value: !GetAtt
      - LogWriter
      - Outputs.SubscriberQueueArn
  SubscriberLogGroupName:
    Description: >-
      LogWriter Subscriber Log Group Name. This log group contains useful
      information for debugging the Subscriber function.
    Value: !GetAtt
      - LogWriter
      - Outputs.SubscriberLogGroupName
