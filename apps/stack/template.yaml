---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Collect resource, logs and metrics from AWS
Metadata:
  AWS::ServerlessRepo::Application:
    Name: observe-aws-collection
    Description: Collect resource, logs and metrics data from AWS
    Author: Observe Inc
    SpdxLicenseId: Apache-2.0
    ReadmeUrl: README.md
    HomePageUrl: https://github.com/observeinc/aws-sam-apps
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/observeinc/aws-sam-apps

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Destination parameters
        Parameters:
          - DestinationUri
          - DataAccessPointArn
      - Label:
          default: AWS Config
        Parameters:
          - ConfigDeliveryBucketName
          - IncludeResourceTypes
          - ExcludeResourceTypes
      - Label:
          default: CloudWatch Logs
        Parameters:
          - LogGroupNamePatterns
          - LogGroupNamePrefixes
      - Label:
          default: CloudWatch Metrics
        Parameters:
          - MetricStreamFilterURI
      - Label:
          default: Forwarder Options
        Parameters:
          - SourceBucketNames
          - ContentTypeOverrides
          - NameOverride
      - Label:
          default: Debugging Options
        Parameters:
          - DebugEndpoint

Parameters:
  DestinationUri:
    Type: String
    Description: >-
      The URI for your destination, e.g.  `s3://bucket-alias/ds101/`. S3 URIs must
      end in a forward slash.
    AllowedPattern: "^(s3:\/\/.+\/|https:\/\/.+)$"
  DataAccessPointArn:
    Type: String
    Description: >-
      The access point ARN for your Filedrop.
    AllowedPattern: "^(arn:.*)?$"
    Default: ''
  SourceBucketNames:
    Type: CommaDelimitedList
    Description: >-
      A list of bucket names which the forwarder is allowed to read from.
    Default: ""
  ContentTypeOverrides:
    Type: CommaDelimitedList
    Description: >-
      A list of key value pairs. The key is a regular expression which is
      applied to the S3 source (<bucket>/<key>) of forwarded files. The value
      is the content type to set for matching files. For example,
      `\.json$=application/x-ndjson` would forward all files ending in `.json`
      as newline delimited JSON
      files.
    Default: ''
  NameOverride:
    Type: String
    Description: >-
      Name of IAM role expected by Filedrop. This role will be created as part
      of this stack, and must therefore be unique within the account.
    Default: ""
    MaxLength: 51
  ConfigDeliveryBucketName:
    Type: String
    Description: >-
      If AWS Config is already enabled in this account and region, provide the
      S3 bucket snapshots are written to.
    Default: ""
  IncludeResourceTypes:
    Type: CommaDelimitedList
    Description: >-
      If AWS Config is not enabled in this account and region, provide a list of
      resource types to collect. Use a wildcard to collect all
      supported resource types.
    Default: ""
    AllowedPattern: '^([a-zA-Z0-9]+::[a-zA-Z0-9]+::[a-zA-Z0-9]+|\*)?$'
  ExcludeResourceTypes:
    Type: CommaDelimitedList
    Description: >-
      Exclude a subset of resource types from configuration collection. This
      parameter can only be set if IncludeResourceTypes is wildcarded.
    Default: ""
    AllowedPattern: '^([a-zA-Z0-9]+::[a-zA-Z0-9]+::[a-zA-Z0-9]+)?$'
  LogGroupNamePatterns:
    Type: CommaDelimitedList
    Description: >-
      Comma separated list of patterns. If not empty, the lambda function will
      only apply to log groups that have names that match one of the provided
      strings based on a case-sensitive substring search.
    Default: ''
  LogGroupNamePrefixes:
    Type: CommaDelimitedList
    Description: >-
      Comma separated list of prefixes. If not empty, the lambda function will
      only apply to log groups that start with a provided string.
    Default: ''
  MetricStreamFilterURI:
    Type: String
    Description: >-
      S3 URI containing filters for metrics to be collected by CloudWatch
      Metrics Stream. If empty, no metrics will be collected.
    Default: 's3://observeinc/cloudwatchmetrics/filters/recommended.yaml'
    AllowedPattern: "^(s3:\/\/.*)?$"
  DebugEndpoint:
    Type: String
    Description: >-
      OpenTelemetry endpoint to send additional telemetry to.
    Default: ''
    AllowedPattern: "^(http(s)?:\/\/.*)?$"

Conditions:
  EmptyConfigDeliveryBucketName: !Equals
    - !Ref ConfigDeliveryBucketName
    - ""
  EnableConfigSubscription: !Not
   - !Condition EmptyConfigDeliveryBucketName
  EnableConfig: !And
    - !Not
      - !Condition EnableConfigSubscription
    - !Not
      - !Equals
        - ""
        - !Join
          - ","
          - !Ref IncludeResourceTypes
  EmptySourceBucketNames: !Equals
    - !Join [",", !Ref SourceBucketNames]
    - ""
  UseStackName: !Equals
    - !Ref NameOverride
    - ""
  EnableMetricStream: !Not
    - !Equals
      - !Ref MetricStreamFilterURI
      - ""

Resources:
  Topic:
    Type: "AWS::SNS::Topic"
  TopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "Config"
            Effect: "Allow"
            Principal:
              Service:
                - "config.amazonaws.com"
            Action:
              - "sns:Subscribe"
              - "sns:Receive"
              - "sns:ListSubscriptionsByTopic"
            Resource:
              - !Ref Topic
          - Sid: "S3"
            Effect: "Allow"
            Principal:
              Service:
                - "s3.amazonaws.com"
            Action:
              - "sns:Publish"
            Resource:
              - !Ref Topic
          - Sid: "Cloudformation"
            Effect: "Allow"
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sns:Publish"
            Resource:
              - !Ref Topic
      Topics:
        - !Ref Topic
  Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    DependsOn: TopicPolicy
    Properties:
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Status: Enabled
      NotificationConfiguration:
        TopicConfigurations:
          - Event: "s3:ObjectCreated:*"
            Topic: !Ref Topic
  Forwarder:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../forwarder/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        DataAccessPointArn: !Ref DataAccessPointArn
        DestinationUri: !Ref DestinationUri
        SourceBucketNames: !Join
            - ","
            - - !Ref Bucket
              - !If
                - EmptySourceBucketNames
                - !Ref AWS::NoValue
                - !Join [",", !Ref SourceBucketNames]
              - !If
                - EmptyConfigDeliveryBucketName
                - !Ref AWS::NoValue
                - !Ref ConfigDeliveryBucketName
        SourceTopicArns: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*"
        ContentTypeOverrides: !Join
          - ","
          - !Ref ContentTypeOverrides
        NameOverride: !If
          - UseStackName
          - !Ref AWS::StackName
          - !Ref NameOverride
        DebugEndpoint: !Ref DebugEndpoint
  TopicSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt
        - Forwarder
        - Outputs.Queue
      Protocol: sqs
      TopicArn: !Ref Topic
  Config:
    Type: AWS::Serverless::Application
    DependsOn: Forwarder
    Condition: EnableConfig
    Properties:
      Location: ../config/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        BucketName: !Ref Bucket
        TopicARN: !Ref Topic
        IncludeResourceTypes: !Join [",", !Ref IncludeResourceTypes]
        ExcludeResourceTypes: !Join [",", !Ref ExcludeResourceTypes]
  ConfigSubscription:
    Type: AWS::Serverless::Application
    Condition: EnableConfigSubscription
    Properties:
      Location: ../configsubscription/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        TargetARN: !GetAtt
          - Forwarder
          - Outputs.Queue
  LogWriter:
    Type: AWS::Serverless::Application
    Properties:
      Location: ../logwriter/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        BucketARN: !GetAtt Bucket.Arn
        DebugEndpoint: !Ref DebugEndpoint
        LogGroupNamePrefixes: !Join [",", !Ref LogGroupNamePrefixes]
        LogGroupNamePatterns: !Join [",", !Ref LogGroupNamePatterns]
        FilterName: 'observe-logs-subscription'
        DiscoveryRate: "24 hours"
        NameOverride: !If
          - UseStackName
          - !Sub "${AWS::StackName}-LogWriter"
          - !Sub "${NameOverride}-LogWriter"
  MetricStream:
    Type: AWS::Serverless::Application
    Condition: EnableMetricStream
    Properties:
      Location: ../metricstream/template.yaml
      NotificationARNs:
        - !Ref Topic
      Parameters:
        BucketARN: !GetAtt Bucket.Arn
        FilterURI: !Ref MetricStreamFilterURI
        NameOverride: !If
          - UseStackName
          - !Sub "${AWS::StackName}-MetricStream"
          - !Sub "${NameOverride}-MetricStream"
Outputs:
  Bucket:
    Description: "S3 Bucket Name"
    Value: !Ref Bucket
  BucketARN:
    Description: "S3 Bucket ARN"
    Value: !GetAtt Bucket.Arn
  Topic:
    Description: "SNS Topic ARN"
    Value: !Ref Topic
