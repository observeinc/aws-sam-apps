---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Forward data to Observe via S3.'
Metadata:
  AWS::ServerlessRepo::Application:
    Name: observe-forwarder
    Description: Forward data to Observe via S3.
    Author: Observe Inc
    SpdxLicenseId: Apache-2.0
    ReadmeUrl: README.md
    HomePageUrl: https://github.com/observeinc/aws-sam-apps
    SemanticVersion: '0.0.5'
    SourceCodeUrl: https://github.com/observeinc/aws-sam-apps

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Filedrop Configuration
        Parameters:
          - DataAccessPointArn
          - DestinationUri
          - NameOverride
      - Label:
          default: Data Sources
        Parameters:
          - SourceBucketNames
          - SourceTopicArns

Globals:
  Function:
    Timeout: 20
    MemorySize: 128

Parameters:
  DataAccessPointArn:
    Type: String
    Description: >-
      The access point ARN for your Filedrop.
  DestinationUri:
    Type: String
    Description: >-
      The S3 URI for your Filedrop, e.g.  `s3://bucket-alias/ds101/`
  NameOverride:
    Type: String
    Description: >-
      Name of IAM role expected by Filedrop. This name will also be applied to
      the SQS Queue and Lambda Function processing events. In the absence of a
      value, the stack name will be used.
    Default: ''
    MaxLength: 64
  SourceBucketNames:
    Type: CommaDelimitedList
    Description: >-
      A list of bucket names which the forwarder is allowed to read from.  This
      list only affects permissions, and supports wildcards. In order to have
      files copied to Filedrop, you must also subscribe S3 Bucket Notifications
      to the forwarder.
    Default: ''
  SourceTopicArns:
    Type: CommaDelimitedList
    Description: >-
      A list of SNS topics the forwarder is allowed to be subscribed to.
    Default: ''
  MaxFileSize:
    Type: String
    Description: Max file size for objects to process (in bytes), default is 1GB
    Default: ''
    AllowedPattern: '^[0-9]*$'
  ContentTypeOverrides:
    Type: CommaDelimitedList
    Description: >-
      A list of key value pairs. The key is a regular expression which is
      applied to the S3 URI of forwarded files. The value is the content type
      to set for matching files. For example, `\.json$=application/x-ndjson`
      would forward all files aending in `.json` as newline delimited JSON
      files.
    Default: ''
Conditions:
  IsMaxFileSizeEmpty: !Equals [ !Ref MaxFileSize, '' ]
  DisableSourceS3: !Equals
    - !Join
      - ''
      - !Ref SourceBucketNames
    - ''
  UseStackName: !Equals
    - !Ref NameOverride
    - ''

Resources:
  DeadLetter:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub
        - '${Name}-deadletter'
        - Name: !If
            - UseStackName
            - !Ref AWS::StackName
            - !Ref NameOverride
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !If
        - UseStackName
        - !Ref AWS::StackName
        - !Ref NameOverride
      DelaySeconds: 0
      MessageRetentionPeriod: 1209600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetter.Arn
        maxReceiveCount: 4
      VisibilityTimeout: 20
  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - !If
            - DisableSourceS3
            - !Ref AWS::NoValue
            - Effect: Allow
              Action: sqs:SendMessage
              Resource: !GetAtt Queue.Arn
              Principal:
                Service: s3.amazonaws.com
              Condition:
                ArnEquals:
                  aws:SourceArn: !Split
                    - ","
                    - !Sub
                      - "arn:aws:s3:::${Joined}"
                      - Joined: !Join
                          - ",arn:aws:s3:::"
                          - !Ref SourceBucketNames
          - Effect: Allow
            Action: sqs:SendMessage
            Resource: !GetAtt Queue.Arn
            Principal:
              Service: sns.amazonaws.com
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SourceTopicArns
          - Effect: Allow
            Action: sqs:SendMessage
            Resource: !GetAtt Queue.Arn
            Principal:
              Service: events.amazonaws.com
      Queues:
        - !Ref Queue
  Rule:
    Type: AWS::Events::Rule
    Properties:
      Description: "Trigger copy for object created events"
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
      # NOTE: it would be nice to filter events to match source buckets only.
      # SourceBucketArns however allows for wildcards, which aren't easily
      # converted into the appropriate EventBridge filter. We instead filter
      # within the lambda.
      Targets:
        - Arn: !GetAtt Queue.Arn
          Id: "Forwarder"
          InputTransformer:
            InputPathsMap:
              bucketName: "$.detail.bucket.name"
              objectKey: "$.detail.object.key"
              objectSize: "$.detail.object.size"  # Added object size
            InputTemplate: >-
              {"copy": [{"uri": "s3://<bucketName>/<objectKey>", "size": <objectSize>}]}
  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !If
        - UseStackName
        - !Ref AWS::StackName
        - !Ref NameOverride
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: logging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt LogGroup.Arn
        - PolicyName: writer
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectTagging
                Resource: "*"
                Condition:
                  StringLike:
                    s3:DataAccessPointArn:
                      - !Ref DataAccessPointArn
        - !If
          - DisableSourceS3
          - !Ref AWS::NoValue
          - PolicyName: reader
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:ListBucket
                  Resource: !Split
                    - ","
                    - !Sub
                      - "arn:aws:s3:::${Joined}"
                      - Joined: !Join
                          - ",arn:aws:s3:::"
                          - !Ref SourceBucketNames
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:GetObjectTagging
                  Resource: !Split
                    - ","
                    - !Sub
                      - "arn:aws:s3:::${Joined}/*"
                      - Joined: !Join
                          - "/*,arn:aws:s3:::"
                          - !Ref SourceBucketNames
        - PolicyName: queue
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt Queue.Arn
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join
        - ''
        - - /aws/lambda/
          - !If
            - UseStackName
            - !Ref AWS::StackName
            - !Ref NameOverride
      RetentionInDays: 365
  Forwarder:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    DependsOn: LogGroup
    Properties:
      FunctionName: !If
        - UseStackName
        - !Ref AWS::StackName
        - !Ref NameOverride
      Role: !GetAtt Role.Arn
      CodeUri: ../..
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - arm64
      Events:
        Items:
          Type: SQS
          Properties:
            Queue: !GetAtt Queue.Arn
            BatchSize: 10
            Enabled: true
      Environment:
        Variables:
          DESTINATION_URI: !Ref DestinationUri
          VERBOSITY: 9
          MAX_FILE_SIZE: !If [ IsMaxFileSizeEmpty, '1073741824', !Ref MaxFileSize ]
          CONTENT_TYPE_OVERRIDES: !Join
            - ","
            - !Ref ContentTypeOverrides
          SOURCE_BUCKET_NAMES: !Join
            - ','
            - !Ref SourceBucketNames
Outputs:
  Function:
    Description: "Lambda Function ARN"
    Value: !GetAtt Forwarder.Arn
  Queue:
    Description: "SQS Queue ARN"
    Value: !GetAtt Queue.Arn
  Role:
    Description: "IAM Role ARN"
    Value: !GetAtt Role.Arn
  LogGroupName:
    Description: "Log Group Name"
    Value: !Ref LogGroup
