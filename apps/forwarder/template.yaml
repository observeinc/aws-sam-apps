---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Forward data to Observe via S3.'
Metadata:
  AWS::ServerlessRepo::Application:
    Name: observe-forwarder
    Description: Forward data to Observe via S3.
    Author: Observe Inc
    SpdxLicenseId: Apache-2.0
    ReadmeUrl: README.md
    HomePageUrl: https://github.com/observeinc/aws-sam-apps
    SemanticVersion: '0.0.5'
    SourceCodeUrl: https://github.com/observeinc/aws-sam-apps

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Filedrop Configuration
        Parameters:
          - DestinationUri
          - DataAccessPointArn
          - NameOverride
      - Label:
          default: Data Sources
        Parameters:
          - SourceBucketNames
          - SourceTopicArns
          - SourceKMSKeyArns
          - ContentTypeOverrides
      - Label:
          default: Sizing
        Parameters:
          - MaxFileSize
          - MemorySize
          - Timeout
      - Label:
          default: Debugging
        Parameters:
          - DebugEndpoint
          - Verbosity
Parameters:
  DestinationUri:
    Type: String
    Description: >-
      The URI for your destination, e.g.  `s3://bucket-alias/ds101/`. S3 URIs
      must end in a forward slash.
    AllowedPattern: "^(s3:\/\/.+\/|https:\/\/.+)$"
  DataAccessPointArn:
    Type: String
    Description: >-
      The access point ARN for your Filedrop.
    AllowedPattern: "^(arn:.*)?$"
    Default: ''
  NameOverride:
    Type: String
    Description: >-
      Name of IAM role expected by Filedrop. This name will also be applied to
      the SQS Queue and Lambda Function processing events. In the absence of a
      value, the stack name will be used.
    Default: ''
    MaxLength: 64
  SourceBucketNames:
    Type: CommaDelimitedList
    Description: >-
      A list of bucket names which the forwarder is allowed to read from.  This
      list only affects permissions, and supports wildcards. In order to have
      files copied to Filedrop, you must also subscribe S3 Bucket Notifications
      to the forwarder.
    Default: ''
    AllowedPattern: "^[a-z0-9-.]*(\\*)?$"
  SourceTopicArns:
    Type: CommaDelimitedList
    Description: >-
      A list of SNS topics the forwarder is allowed to be subscribed to.
    Default: ''
    AllowedPattern: "^(arn:.*)?$"
  SourceKMSKeyArns:
    Type: CommaDelimitedList
    Description: >-
      A list of KMS Key ARNs the forwarder is allowed to use to decrypt objects
      in S3.
    Default: ''
    AllowedPattern: "^(arn:.*)?$"
  ContentTypeOverrides:
    Type: CommaDelimitedList
    Description: >-
      A list of key value pairs. The key is a regular expression which is
      applied to the S3 source (<bucket>/<key>) of forwarded files. The value
      is the content type to set for matching files. For example,
      `\.json$=application/x-ndjson` would forward all files ending in `.json`
      as newline delimited JSON
      files.
    Default: ''
  MaxFileSize:
    Type: String
    Description: Max file size for objects to process (in bytes), default is 1GB
    Default: ''
    AllowedPattern: '^[0-9]*$'
  MemorySize:
    Type: String
    Description: >-
      The amount of memory, in megabytes, that your function has access to.
    Default: ''
    AllowedValues:
      - ''
      - '64'
      - '128'
      - '256'
      - '512'
      - '1024'
      - '2048'
      - '4096'
      - '8128'
    AllowedPattern: "^[0-9]*$"
  Timeout:
    Type: String
    Description: >-
      The amount of time that Lambda allows a function to run before stopping
      it. The maximum allowed value is 900 seconds.
    Default: ''
    AllowedPattern: "^[0-9]*$"
  DebugEndpoint:
    Type: String
    Description: >-
      Endpoint to send additional debug telemetry to.
    Default: ''
    AllowedPattern: "^(http(s)?:\/\/.*)?$"
  Verbosity:
    Type: String
    Default: ''
    Description: >-
      Logging verbosity for Lambda. Highest log verbosity is 9.
    AllowedPattern: "^[0-9]?$"
Conditions:
  NoDataAccessPointArn: !Equals
    - !Ref DataAccessPointArn
    - ''
  HasS3Destination: !Equals
    - !Select [0, !Split ["://", !Ref DestinationUri]]
    - 's3'
  HasS3DestinationWithoutAccessPoint: !And
    - !Condition HasS3Destination
    - !Condition NoDataAccessPointArn
  UseDefaultMaxFileSize: !Equals
    - !Ref MaxFileSize
    - ''
  UseDefaultMemorySize: !Equals
    - !Ref MemorySize
    - ''
  UseDefaultTimeout: !Equals
    - !Ref Timeout
    - ''
  UseDefaultVerbosity: !Equals
    - !Ref Verbosity
    - ''
  DisableSourceS3: !Equals
    - !Join
      - ''
      - !Ref SourceBucketNames
    - ''
  EnableSourceS3: !Not
    - !Condition DisableSourceS3
  DisableKMSDecrypt: !Equals
    - !Join
      - ''
      - !Ref SourceKMSKeyArns
    - ''
  UseStackName: !Equals
    - !Ref NameOverride
    - ''
  DisableOTEL: !Equals
    - !Ref DebugEndpoint
    - ''

Resources:
  DeadLetter:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub
        - '${Name}-deadletter'
        - Name: !If
            - UseStackName
            - !Ref AWS::StackName
            - !Ref NameOverride
  Queue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !If
        - UseStackName
        - !Ref AWS::StackName
        - !Ref NameOverride
      DelaySeconds: 0
      MessageRetentionPeriod: 345600
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetter.Arn
        maxReceiveCount: 4
      VisibilityTimeout: 300
  QueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - !If
            - DisableSourceS3
            - !Ref AWS::NoValue
            - Effect: Allow
              Action: sqs:SendMessage
              Resource: !GetAtt Queue.Arn
              Principal:
                Service: s3.amazonaws.com
              Condition:
                ArnEquals:
                  aws:SourceArn: !Split
                    - ","
                    - !Sub
                      - "arn:aws:s3:::${Joined}"
                      - Joined: !Join
                          - ",arn:aws:s3:::"
                          - !Ref SourceBucketNames
          - Effect: Allow
            Action: sqs:SendMessage
            Resource: !GetAtt Queue.Arn
            Principal:
              Service: sns.amazonaws.com
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref SourceTopicArns
          - Effect: Allow
            Action: sqs:SendMessage
            Resource: !GetAtt Queue.Arn
            Principal:
              Service: events.amazonaws.com
      Queues:
        - !Ref Queue
  Rule:
    Type: AWS::Events::Rule
    Condition: EnableSourceS3
    Properties:
      Description: "Trigger copy for object created events"
      EventPattern: !Sub
        - |
          {
            "source": ["aws.s3"],
            "detail-type": ["Object Created"],
            "detail.bucket.name": [{"wildcard": "${wildcards}"}]
          }
        - wildcards: !Join
            - '"}, {"wildcard":"'
            - !Ref SourceBucketNames
      Targets:
        - Arn: !GetAtt Queue.Arn
          Id: "Forwarder"
          InputTransformer:
            InputPathsMap:
              bucketName: "$.detail.bucket.name"
              objectKey: "$.detail.object.key"
              objectSize: "$.detail.object.size"  # Added object size
            # yamllint disable rule:line-length
            InputTemplate: >-
              {"copy": [{"uri":"s3://<bucketName>/<objectKey>","size":<objectSize>}]}
            # yamllint enable rule:line-length
  Role:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !If
        - NoDataAccessPointArn
        - !Ref AWS::NoValue
        - !If
          - UseStackName
          - !Ref AWS::StackName
          - !Ref NameOverride
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: logging
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt LogGroup.Arn
        - !If
          - HasS3Destination
          - PolicyName: writer
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:PutObject
                    - s3:PutObjectTagging
                  Resource: !If
                    - HasS3DestinationWithoutAccessPoint
                    # We enforce DestinationUri ends in a forward slash so as
                    # to ensure wildcard does not apply more broadly than
                    # intended.
                    - !Sub
                      - "arn:${AWS::Partition}:s3:::${Destination}*"
                      - Destination: !Select
                          - 1
                          - !Split ["s3://", !Ref DestinationUri]
                    # If data access point is provided, we do not know the
                    # actual ARN. Restrict using a condition instead
                    - "*"
                  Condition: !If
                    - HasS3DestinationWithoutAccessPoint
                    - !Ref AWS::NoValue
                    - StringLike:
                        s3:DataAccessPointArn:
                          - !Ref DataAccessPointArn
          - !Ref AWS::NoValue
        - !If
          - DisableSourceS3
          - !Ref AWS::NoValue
          - PolicyName: reader
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - s3:ListBucket
                  Resource: !Split
                    - ","
                    - !Sub
                      - "arn:aws:s3:::${Joined}"
                      - Joined: !Join
                          - ",arn:aws:s3:::"
                          - !Ref SourceBucketNames
                - Effect: Allow
                  Action:
                    - s3:GetObject
                    - s3:GetObjectTagging
                  Resource: !Split
                    - ","
                    - !Sub
                      - "arn:aws:s3:::${Joined}/*"
                      - Joined: !Join
                          - "/*,arn:aws:s3:::"
                          - !Ref SourceBucketNames
        - PolicyName: queue
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                Resource: !GetAtt Queue.Arn
        - !If
          - DisableKMSDecrypt
          - !Ref AWS::NoValue
          - PolicyName: kms
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - kms:Decrypt
                  Resource: !Ref SourceKMSKeyArns
  LogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: !Join
        - ''
        - - /aws/lambda/
          - !If
            - UseStackName
            - !Ref AWS::StackName
            - !Ref NameOverride
      RetentionInDays: 365
  Forwarder:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
    DependsOn: LogGroup
    Properties:
      FunctionName: !If
        - UseStackName
        - !Ref AWS::StackName
        - !Ref NameOverride
      Role: !GetAtt Role.Arn
      CodeUri: ../../bin/linux_arm64
      Handler: bootstrap
      Runtime: provided.al2
      MemorySize: !If
        - UseDefaultMemorySize
        - !If
          - HasS3Destination
          - "128"
          - "256"
        - !Ref MemorySize
      Timeout: !If
        - UseDefaultTimeout
        - "300"
        - !Ref Timeout
      Architectures:
        - arm64
      Events:
        Items:
          Type: SQS
          Properties:
            BatchSize: 10
            Enabled: true
            FunctionResponseTypes:
              - ReportBatchItemFailures
            Queue: !GetAtt Queue.Arn
      Environment:
        Variables:
          DESTINATION_URI: !Ref DestinationUri
          VERBOSITY: !If
            - UseDefaultVerbosity
            - 1
            - !Ref Verbosity
          MAX_FILE_SIZE: !If
            - UseDefaultMaxFileSize
            - "1073741824"
            - !Ref MaxFileSize
          CONTENT_TYPE_OVERRIDES: !Join
            - ","
            - !Ref ContentTypeOverrides
          SOURCE_BUCKET_NAMES: !Join
            - ','
            - !Ref SourceBucketNames
          OTEL_EXPORTER_OTLP_ENDPOINT: !Ref DebugEndpoint
          OTEL_TRACES_EXPORTER: !If [DisableOTEL, "none", "otlp"]
Outputs:
  Function:
    Description: "Lambda Function ARN"
    Value: !GetAtt Forwarder.Arn
  Queue:
    Description: "SQS Queue ARN"
    Value: !GetAtt Queue.Arn
  Role:
    Description: "IAM Role ARN"
    Value: !GetAtt Role.Arn
  LogGroupName:
    Description: "Log Group Name"
    Value: !Ref LogGroup
